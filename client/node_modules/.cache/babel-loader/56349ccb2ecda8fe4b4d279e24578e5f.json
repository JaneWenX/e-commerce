{"ast":null,"code":"var _jsxFileName = \"/Users/xialiangwen/Desktop/web_projects/e-commerce-1/client/src/context/Context.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\"; // import from react\n\nimport axios from \"axios\"; // import from axios\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ItemContext = /*#__PURE__*/createContext(); // creating a context\n// creating a provider\n\nexport const ItemProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  // states here:\n  const [Items, setItems] = useState([]); // state to capture the all items\n\n  const [singleItem, setSingleItem] = useState([]); // state to capture the single item\n\n  const [companies, setCompanies] = useState([]); // state to capture the all companies\n\n  const [companyInfo, setCompanyInfo] = useState([]); // state to capture the single company\n\n  const [companyProducts, setCompanyProducts] = useState([]); // state to capture the all products of the company\n\n  const [ItemNumber, setItemNumber] = useState(0); // state to capture the number of items in the cart\n\n  const [cart, setCart] = useState([]); // state to capture the items in the cart\n\n  const [orderHistory, setOrderHistory] = useState(null); // state to capture the orders of the user\n\n  const [company, setCompany] = useState(null); // state to capture the company of the item\n\n  const [error, setError] = useState(false); // state to capture the error\n  // getting the all companies from the database\n\n  useEffect(() => {\n    axios.get(\"/api/companies\").then(res => {\n      setCompanies(res.data.data);\n    }).catch(err => {\n      setError(err);\n    });\n  }, []); // getting the all items from the database\n\n  useEffect(() => {\n    axios.get(\"/api/items\").then(res => {\n      setItems(res.data.data);\n      console.log(res);\n    }).catch(err => {\n      setError(err);\n    });\n  }, []);\n  console.log(\"all items in the provider: \", Items);\n  let temporaryArray = []; // temporary array to store the items in the cart\n  // for the post method to add the item to the cart in mongodb\n\n  const addToCart = (e, items) => {\n    e.preventDefault();\n    e.stopPropagation();\n    temporaryArray.push(items);\n    setCart(temporaryArray); // sending the item to the database\n\n    axios({\n      method: \"POST\",\n      url: \"/api/cart\",\n      data: {\n        _id: items._id,\n        name: items.name,\n        price: items.price,\n        imageSrc: items.imageSrc,\n        body_location: items.body_location,\n        category: items.category,\n        companyId: items.companyId\n      }\n    }).then(res => {\n      return;\n    }).catch(err => {\n      setError(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ItemContext.Provider, {\n    value: {\n      Items,\n      companies,\n      singleItem,\n      setSingleItem,\n      companyInfo,\n      setCompanyInfo,\n      companyProducts,\n      setCompanyProducts,\n      ItemNumber,\n      addToCart,\n      cart,\n      setCart,\n      company,\n      setCompany,\n      orderHistory,\n      setOrderHistory,\n      error,\n      setError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ItemProvider, \"OkizrWs5btsJY4ZJAaC52q7oeto=\");\n\n_c = ItemProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemProvider\");","map":{"version":3,"sources":["/Users/xialiangwen/Desktop/web_projects/e-commerce-1/client/src/context/Context.js"],"names":["createContext","useState","useEffect","axios","ItemContext","ItemProvider","children","Items","setItems","singleItem","setSingleItem","companies","setCompanies","companyInfo","setCompanyInfo","companyProducts","setCompanyProducts","ItemNumber","setItemNumber","cart","setCart","orderHistory","setOrderHistory","company","setCompany","error","setError","get","then","res","data","catch","err","console","log","temporaryArray","addToCart","e","items","preventDefault","stopPropagation","push","method","url","_id","name","price","imageSrc","body_location","category","companyId"],"mappings":"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","sourcesContent":["import { createContext, useState, useEffect } from \"react\"; // import from react\nimport axios from \"axios\"; // import from axios\n\nexport const ItemContext = createContext(); // creating a context\n\n// creating a provider\nexport const ItemProvider = ({ children }) => {\n\n  // states here:\n  const [Items, setItems] = useState([]); // state to capture the all items\n  const [singleItem, setSingleItem] = useState([]); // state to capture the single item\n\n  const [companies, setCompanies] = useState([]); // state to capture the all companies\n  const [companyInfo, setCompanyInfo] = useState([]); // state to capture the single company\n  const [companyProducts, setCompanyProducts] = useState([]); // state to capture the all products of the company\n\n  const [ItemNumber, setItemNumber] = useState(0); // state to capture the number of items in the cart\n  const [cart, setCart] = useState([]); // state to capture the items in the cart\n  const [orderHistory, setOrderHistory] = useState(null); // state to capture the orders of the user\n\n  const [company, setCompany] = useState(null); // state to capture the company of the item\n\n  const [error, setError] = useState(false); // state to capture the error\n\n  // getting the all companies from the database\n  useEffect(() => {\n    axios\n      .get(\"/api/companies\")\n      .then((res) => {\n        setCompanies(res.data.data);\n      })\n      .catch((err) => {\n        setError(err);\n      });\n  }, []);\n\n  // getting the all items from the database\n  useEffect(() => {\n    axios\n      .get(\"/api/items\")\n      .then((res) => {\n        setItems(res.data.data);\n        console.log(res)\n      })\n      .catch((err) => {\n        setError(err);\n      });\n  }, []);\n\n  console.log(\"all items in the provider: \", Items);\n  \n  let temporaryArray = []; // temporary array to store the items in the cart\n\n  // for the post method to add the item to the cart in mongodb\n  const addToCart = (e, items) => {\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    temporaryArray.push(items);\n    setCart(temporaryArray);\n\n    // sending the item to the database\n      axios({\n        method: \"POST\",\n        url: \"/api/cart\",\n        data: {\n          _id: items._id,\n          name: items.name,\n          price: items.price,\n          imageSrc: items.imageSrc,\n          body_location: items.body_location,\n          category: items.category,\n          companyId: items.companyId,\n        },\n      })\n        .then((res) => {\n          return;\n        })\n        .catch((err) => {\n          setError(err);   \n        });\n  };\n\n\n  return (\n    <ItemContext.Provider\n      value={{\n        Items,\n        companies,\n        singleItem,\n        setSingleItem,\n        companyInfo,\n        setCompanyInfo,\n        companyProducts,\n        setCompanyProducts,\n        ItemNumber,\n        addToCart,\n        cart,\n        setCart,\n        company,\n        setCompany,\n        orderHistory,\n        setOrderHistory,\n        error,\n        setError,\n      }}\n    >\n      {children}\n    </ItemContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}